<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Status', 'doctrine');

/**
 * BaseStatus
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $label
 * @property integer $association_id
 * @property integer $state
 * @property integer $created_by
 * @property integer $updated_by
 * @property Association $Association
 * @property Doctrine_Collection $Member
 * @property Member $Member_3
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getLabel()          Returns the current record's "label" value
 * @method integer             getAssociationId()  Returns the current record's "association_id" value
 * @method integer             getState()          Returns the current record's "state" value
 * @method integer             getCreatedBy()      Returns the current record's "created_by" value
 * @method integer             getUpdatedBy()      Returns the current record's "updated_by" value
 * @method Association         getAssociation()    Returns the current record's "Association" value
 * @method Doctrine_Collection getMember()         Returns the current record's "Member" collection
 * @method Member              getMember3()        Returns the current record's "Member_3" value
 * @method Status              setId()             Sets the current record's "id" value
 * @method Status              setLabel()          Sets the current record's "label" value
 * @method Status              setAssociationId()  Sets the current record's "association_id" value
 * @method Status              setState()          Sets the current record's "state" value
 * @method Status              setCreatedBy()      Sets the current record's "created_by" value
 * @method Status              setUpdatedBy()      Sets the current record's "updated_by" value
 * @method Status              setAssociation()    Sets the current record's "Association" value
 * @method Status              setMember()         Sets the current record's "Member" collection
 * @method Status              setMember3()        Sets the current record's "Member_3" value
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6716 2009-11-12 19:26:28Z jwage $
 */
abstract class BaseStatus extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('piwam_status');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('association_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('state', 'integer', 1, array(
             'type' => 'integer',
             'default' => '1',
             'length' => '1',
             ));
        $this->hasColumn('created_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('updated_by', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Association', array(
             'local' => 'association_id',
             'foreign' => 'id'));

        $this->hasMany('Member', array(
             'local' => 'id',
             'foreign' => 'status_id'));

        $this->hasOne('Member as Member_3', array(
             'local' => 'updated_by',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}